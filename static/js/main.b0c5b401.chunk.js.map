{"version":3,"sources":["pages/components/HourBox/HourBox.js","pages/components/DayContainer/DayContainer.js","firebase/firebase.js","components/Spinner/Spinner.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["HourBox","value","onSelect","selected","className","onClick","DayContainer","day","selectedHours","hours","Array","keys","map","hour","index","includes","firebase","initializeApp","apiKey","process","databaseURL","projectId","appId","db","firestore","Spinner","visible","useState","visibility","setVisibility","useEffect","BoxContainer","monday","tuesday","wednesday","thursday","friday","saturday","sunday","setSelectedHours","isLoading","setLoading","handleSelection","d","toLowerCase","s","idx","findIndex","val","splice","push","handleSubmit","a","collection","doc","set","then","console","log","catch","error","finally","get","exists","data","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0c5b401.chunk.js","sourcesContent":["import React from 'react';\nimport './HourBox.css';\n\nconst HourBox = ({ value, onSelect, selected }) => {\n  return (\n    <div className={`day-box ${selected}`} onClick={() => onSelect(value)}>\n      <p className='number'>{value}</p>\n    </div>\n  );\n};\n\nexport default HourBox;\n","import React from 'react';\nimport HourBox from '../HourBox/HourBox';\nimport './DayContainer.css';\n\nconst DayContainer = ({ day, onSelect, selectedHours }) => {\n  let hours = [...Array(25).keys()];\n\n  return (\n    <div className='day-container'>\n      <p className='day-name'>{day}</p>\n      <div className='day-hours'>\n        {hours.map((hour, index) => (\n          <HourBox\n            value={hour}\n            key={index}\n            onSelect={(value) => onSelect(value, day)}\n            selected={selectedHours.includes(hour) ? 'selected' : ''}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DayContainer;\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  appId: process.env.REACT_APP_FIREBASE_APPID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport { db };\n\nexport default firebase;\n","import React, { useEffect, useState } from 'react';\nimport './Spinner.css';\n\nconst Spinner = ({ visible }) => {\n  const [visibility, setVisibility] = useState('hidden');\n\n  useEffect(() => {\n    if (visible) {\n      setVisibility('visible');\n    } else {\n      setVisibility('hidden');\n    }\n  }, [visible]);\n\n  return (\n    <div className={`spinner-background ${visibility}`}>\n      <div className={`spinner ${visibility}`}></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useEffect, useState } from 'react';\nimport DayContainer from './components/DayContainer/DayContainer';\nimport './Home.css';\nimport { db } from '../firebase/firebase';\nimport Spinner from '../components/Spinner/Spinner';\n\nconst BoxContainer = () => {\n  const days = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Sunday'\n  ];\n  const [selectedHours, setSelectedHours] = useState({\n    monday: [],\n    tuesday: [],\n    wednesday: [],\n    thursday: [],\n    friday: [],\n    saturday: [],\n    sunday: []\n  });\n  const [isLoading, setLoading] = useState(false);\n\n  const handleSelection = (value, day) => {\n    let d = day.toLowerCase();\n    let s = selectedHours;\n    let idx = s[d].findIndex((val) => val === value);\n    if (idx !== -1) {\n      s[d].splice(idx, 1);\n      setSelectedHours({ ...s });\n    } else {\n      s[d].push(value);\n      setSelectedHours({ ...s });\n    }\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    db.collection('schedules')\n      .doc('user1')\n      .set(selectedHours)\n      .then(() => {\n        console.log('Created');\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    const getSchedules = () => {\n      setLoading(true);\n      db.collection('schedules')\n        .doc('user1')\n        .get()\n        .then((doc) => {\n          if (doc.exists) {\n            console.log(doc.data());\n            setSelectedHours({ ...doc.data() });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    };\n\n    getSchedules();\n  }, []);\n\n  return (\n    <div>\n      <Spinner visible={isLoading} />\n      <header>\n        <h2 className='header'>React scheduler</h2>\n      </header>\n      <div>\n        <h3 className='head-info'>\n          Select the time you are available for a week\n        </h3>\n        <div className='home-container'>\n          <div className='week-days-container'>\n            {days.map((day, index) => (\n              <DayContainer\n                day={day}\n                key={index}\n                onSelect={handleSelection}\n                selectedHours={selectedHours[day.toLowerCase()]}\n              />\n            ))}\n          </div>\n          <button className='submit' onClick={handleSubmit}>\n            SUBMIT\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BoxContainer;\n","import React from 'react';\nimport './App.css';\nimport BoxContainer from './pages/Home';\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <BoxContainer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}